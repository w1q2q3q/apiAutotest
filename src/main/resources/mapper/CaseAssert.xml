<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.Mapper.CaseAssertMapper">
    <resultMap id="CaseAssert" type="com.example.demo.Entity.CaseAssert">
        <id property="aid" column="aid" javaType="java.lang.Integer"/>
        <result property="responsetype" column="responsetype" javaType="java.lang.Integer"/>
        <result property="assertparameter" column="assertparameter" javaType="java.lang.String"/>
        <result property="assertmethod" column="assertmethod" javaType="java.lang.Integer"/>
        <!--<result property="responsedate" column="repsonedate" javaType="java.lang.String"/>-->
        <result property="acaseid" column="acaseid" javaType="java.lang.Integer"/>
        <!--<association property="TestCase"-->
                     <!--resultMap="com.example.demo.Mapper.TestCaseMapper"></association>-->
    </resultMap>
    <!-- 批量新增的时候，注意接收的对象是一个列表，需要在动态拼接sql的时候遍历参数集合对象 -->
    <insert id="addAssert" parameterType="java.util.List">
        Insert into caseassert (responsetype,assertparameter,assertmethod,acaseid) values
        <!-- 注意foreach的语法,集合直接写list字符串，用item表示当前遍历的对象，结果集合通过使用逗号分隔使用separator属性 -->
        <foreach collection="list" item="item" separator=",">
            (#{item.responsetype},#{item.assertparameter},#{item.assertmethod},#{item.acaseid})
        </foreach>
    </insert>

    <insert id="addOneAssert" parameterType="com.example.demo.Entity.CaseAssert">
        Insert into caseassert
        (name,paramter,caseid) values(#{item.name},#{item.paramter},#{item.caseid})
    </insert>

</mapper>